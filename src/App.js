import React, { useState, useRef, useEffect } from 'react';
import logo from './logo.jpg';
import 'leaflet/dist/leaflet.css';
import './App.css';

function App() {
  const [form, setForm] = useState({
    name: '',
    phone: '',
    address: '',
    message: '',
    mediaFiles: [],
    latitude: '',
    longitude: ''
  });
  const [submitResult, setSubmitResult] = useState('');
  const [loading, setLoading] = useState(false);
  const mapRef = useRef(null);
  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:4000/api/requests';

  useEffect(() => {
    import('leaflet').then(L => {
      // ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ marker icon ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á
      delete L.Icon.Default.prototype._getIconUrl;
      L.Icon.Default.mergeOptions({
        iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),
        iconUrl: require('leaflet/dist/images/marker-icon.png'),
        shadowUrl: require('leaflet/dist/images/marker-shadow.png'),
      });

      if (mapRef.current && !mapRef.current._leaflet_id) {
        const map = L.map(mapRef.current, {
          tap: false // ‡∏õ‡∏¥‡∏î gesture tap ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ map ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        }).setView([12.616, 102.104], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '¬© OpenStreetMap'
        }).addTo(map);

        let marker = null;
        function setMarker(latlng) {
          if (marker) {
            marker.setLatLng(latlng);
          } else {
            marker = L.marker(latlng).addTo(map);
          }
          setForm(f => ({
            ...f,
            latitude: latlng.lat.toFixed(6),
            longitude: latlng.lng.toFixed(6)
          }));
        }

        map.on('click', function (e) {
          setMarker(e.latlng);
        });

        window.useMyLocation = function () {
          // ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost
          if (
            window.location.protocol !== 'https:' &&
            window.location.hostname !== 'localhost' &&
            window.location.hostname !== '127.0.0.1'
          ) {
            alert(
              "‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n" +
              "‡∏ñ‡πâ‡∏≤ deploy ‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô https:// ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏ô ngrok ‡∏´‡∏£‡∏∑‡∏≠ cloud ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö SSL"
            );
            return;
          }
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
              (position) => {
                const userLatLng = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
                };
                map.setView(userLatLng, 15);
                setMarker(userLatLng);
              },
              (error) => {
                if (error.code === 1) {
                  alert("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏ô browser ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
                } else {
                  alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ: " + error.message);
                }
              },
              {
                enableHighAccuracy: true,
                timeout: 10000,
                maximumAge: 0
              }
            );
          } else {
            alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Geolocation");
          }
        };
      }
    });
  }, []);

  const handleChange = e => {
    const { name, value, files } = e.target;
    if (name === 'mediaFiles') {
      setForm(f => ({ ...f, mediaFiles: Array.from(files) }));
    } else {
      setForm(f => ({ ...f, [name]: value }));
    }
  };

  const handleSubmit = async e => {
    e.preventDefault();
    setLoading(true);
    setSubmitResult('');
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    if (!form.latitude || !form.longitude) {
      setSubmitResult('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô');
      setLoading(false);
      return;
    }
    const formData = new FormData();
    formData.append('name', form.name);
    formData.append('phone', form.phone);
    formData.append('address', form.address);
    formData.append('message', form.message);
    formData.append('latitude', form.latitude);
    formData.append('longitude', form.longitude);
    form.mediaFiles.forEach(file => {
      formData.append('mediaFiles', file);
    });

    try {
      const res = await fetch(BACKEND_URL, {
        method: 'POST',
        body: formData
      });
      if (res.ok) {
        const data = await res.json();
        setSubmitResult(data.message || '‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        setForm({
          name: '',
          phone: '',
          address: '',
          message: '',
          mediaFiles: [],
          latitude: '',
          longitude: ''
        });
        document.getElementById('mediaFiles').value = '';
      } else {
        const text = await res.text();
        setSubmitResult('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á: ' + text);
      }
    } catch (err) {
      setSubmitResult('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ: ' + err.message + '\n‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠');
    }
    setLoading(false);
  };

  return (
    <div className="bg-logo">
      <nav>
        <div style={{ display: 'flex', alignItems: 'center' }}>
          <img src={logo} alt="‡πÇ‡∏•‡πÇ‡∏Å‡πâ ‡∏≠‡∏ö‡∏ï.‡∏ó‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏á" />
          <span>‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≥‡∏ö‡∏•‡∏ó‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏á ‡∏à.‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ</span>
        </div>
        <div>
          <i className="bi bi-envelope"></i> ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á
        </div>
      </nav>

      <section className="layout">
        <div className="map-section">
          <div id="map" ref={mapRef}></div>
          <button
            type="button"
            className="use-location-btn"
            onClick={() => window.useMyLocation && window.useMyLocation()}
          >
            üìç ‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
          </button>
        </div>
        <div className="form-section">
          <h2>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á</h2>
          {submitResult && (
            <div
              style={{
                color:
                  submitResult.includes('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à') ||
                  submitResult.includes('‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')
                    ? 'green'
                    : 'red',
                marginBottom: 8,
                fontWeight: 'bold',
                fontSize: 18
              }}
            >
              {submitResult}
            </div>
          )}
          <form onSubmit={handleSubmit} encType="multipart/form-data">
            <input type="hidden" name="latitude" value={form.latitude} readOnly />
            <input type="hidden" name="longitude" value={form.longitude} readOnly />

            <label>‡∏ä‡∏∑‡πà‡∏≠:</label>
            <input
              type="text"
              name="name"
              value={form.name}
              onChange={handleChange}
              required
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ"
            />

            <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</label>
            <input
              type="tel"
              name="phone"
              value={form.phone}
              onChange={handleChange}
              pattern="[0-9]{10}"
              required
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 0891234567"
            />

            <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</label>
            <textarea
              name="address"
              rows={2}
              value={form.address}
              onChange={handleChange}
              required
              placeholder="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 123 ‡∏´‡∏°‡∏π‡πà 4 ‡∏ï‡∏≥‡∏ö‡∏•‡∏ó‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ"
            />

            <label>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:</label>
            <textarea
              name="message"
              rows={4}
              value={form.message}
              onChange={handleChange}
              required
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏î‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô ‡∏ñ‡∏ô‡∏ô‡∏ä‡∏≥‡∏£‡∏∏‡∏î ‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏•"
            />

            <label>‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠:</label>
            <input
              type="file"
              name="mediaFiles"
              id="mediaFiles"
              multiple
              accept="image/*,video/*"
              onChange={handleChange}
            />

            <button type="submit" disabled={loading}>
              {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...' : 'üì© ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á'}
            </button>
          </form>
        </div>
      </section>

      <footer>
        ¬© 2025 ‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≥‡∏ö‡∏•‡∏ó‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ
      </footer>
    </div>
  );
}

export default App;

// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö geolocation ‡πÉ‡∏ô App.js:
// - ‡∏ï‡πâ‡∏≠‡∏á import 'leaflet/dist/leaflet.css' ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á leaflet ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô window.useMyLocation ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô"
// - ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï geolocation
// - ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ cloud ‡∏´‡∏£‡∏∑‡∏≠ ngrok ‡πÅ‡∏•‡πâ‡∏ß ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ domain ‡πÄ‡∏õ‡πá‡∏ô https:// ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ block location
// - ‡∏ñ‡πâ‡∏≤ error ‡πÄ‡∏õ‡πá‡∏ô "User Denied Geolocation" ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠ browser block location (‡∏ï‡πâ‡∏≠‡∏á Allow ‡πÉ‡∏´‡∏°‡πà)
// - ‡∏ñ‡πâ‡∏≤ error ‡πÄ‡∏õ‡πá‡∏ô "origin does not have permission" ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏¢‡πà‡∏≠):
/*
useEffect(() => {
  import('leaflet').then(L => {
    // ...existing code...
    window.useMyLocation = function () {
      if (
        location.protocol !== 'https:' &&
        location.hostname !== 'localhost' &&
        location.hostname !== '127.0.0.1'
      ) {
        alert("‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
        return;
      }
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            // ...set marker...
          },
          (error) => {
            alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ: " + error.message);
          },
          { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
        );
      } else {
        alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Geolocation");
      }
    };
    // ...existing code...
  });
}, []);
*/

// ‡∏™‡∏£‡∏∏‡∏õ: ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô HTTPS ‡πÅ‡∏•‡∏∞ Allow ‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ
// ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ reset permission ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô browser

// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö error manifest.json ‡πÅ‡∏•‡∏∞ favicon.ico:
// - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "Failed to load resource: net::ERR_HTTP2_PROTOCOL_ERROR" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö manifest.json ‡πÅ‡∏•‡∏∞ favicon.ico
//   ‡∏°‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤ CDN, proxy, ‡∏´‡∏£‡∏∑‡∏≠ server ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå static ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ
// - ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á React app (‡πÄ‡∏ß‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ favicon ‡∏´‡∏£‡∏∑‡∏≠ manifest ‡∏à‡∏£‡∏¥‡∏á ‡πÜ)
// - ‡∏ñ‡πâ‡∏≤ deploy ‡∏ö‡∏ô Vercel ‡∏´‡∏£‡∏∑‡∏≠ cloud ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå public/manifest.json ‡πÅ‡∏•‡∏∞ public/favicon.ico ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå
// - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ô public/index.html ‡∏°‡∏µ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ:
//   <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
//   <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
// - ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ custom domain ‡∏´‡∏£‡∏∑‡∏≠ proxy ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå static ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

// ‡∏™‡∏£‡∏∏‡∏õ: 
// - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå favicon.ico ‡πÅ‡∏•‡∏∞ manifest.json ‡πÉ‡∏ô public/
// - ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô App.js
// - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ error ‡∏ô‡∏µ‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô public/ ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏ô index.html ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á